:py:mod:`tidypandas.tidy_accessor`
==================================

.. py:module:: tidypandas.tidy_accessor


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   tidypandas.tidy_accessor.tp




.. py:class:: tp(pandas_obj)

   
   See the documentation of tidyframe class
















   ..
       !! processed by numpydoc !!
   .. py:attribute:: summarize
      

      

   .. py:attribute:: outer_join
      

      

   .. py:attribute:: head
      

      

   .. py:attribute:: tail
      

      

   .. py:attribute:: sample
      

      

   .. py:attribute:: fill
      

      

   .. py:attribute:: group_split
      

      

   .. py:method:: _validate(obj)
      :staticmethod:


   .. py:method:: nrow()
      :property:


   .. py:method:: ncol()
      :property:


   .. py:method:: shape()
      :property:


   .. py:method:: dim()
      :property:


   .. py:method:: colnames()
      :property:


   .. py:method:: add_row_number(name='row_number', by=None)


   .. py:method:: add_group_number(by=None, name='group_number')


   .. py:method:: group_modify(func, by, preserve_row_order=False, row_order_column_name='rowid_temp', is_pandas_udf=False, **kwargs)


   .. py:method:: select(column_names=None, predicate=None, include=True)


   .. py:method:: relocate(column_names, before=None, after=None)


   .. py:method:: rename(old_new_dict=None, predicate=None, func=None)


   .. py:method:: slice(row_numbers, by=None)


   .. py:method:: arrange(order_by, na_position='last', by=None)


   .. py:method:: filter(query=None, mask=None, by=None, **kwargs)


   .. py:method:: distinct(column_names=None, keep_all=False)


   .. py:method:: mutate(dictionary=None, func=None, column_names=None, predicate=None, prefix='', by=None, order_by=None, **kwargs)


   .. py:method:: summarise(dictionary=None, func=None, column_names=None, predicate=None, prefix='', by=None, **kwargs)


   .. py:method:: inner_join(y, on=None, on_x=None, on_y=None, sort=True, suffix_y='_y')


   .. py:method:: full_join(y, on=None, on_x=None, on_y=None, sort=True, suffix_y='_y')


   .. py:method:: left_join(y, on=None, on_x=None, on_y=None, sort=True, suffix_y='_y')


   .. py:method:: right_join(y, on=None, on_x=None, on_y=None, sort=True, suffix_y='_y')


   .. py:method:: semi_join(y, on=None, on_x=None, on_y=None, sort=True, suffix_y='_y')


   .. py:method:: anti_join(y, on=None, on_x=None, on_y=None, sort=True, suffix_y='_y')


   .. py:method:: cross_join(y, sort=True, suffix_y='_y')


   .. py:method:: cbind(y)


   .. py:method:: rbind(y)


   .. py:method:: count(column_names=None, name='n', decreasing=True, wt=None)


   .. py:method:: add_count(column_names=None, name='n', wt=None)


   .. py:method:: pivot_wider(names_from, values_from, values_fill=None, values_fn=None, id_cols=None, sep='__', names_prefix='')


   .. py:method:: pivot_longer(cols, names_to='name', values_to='value', include=True, values_drop_na=False)


   .. py:method:: slice_head(n=None, prop=None, rounding_type='round', by=None)


   .. py:method:: slice_tail(n=None, prop=None, rounding_type='round', by=None)


   .. py:method:: slice_sample(n=None, prop=None, replace=False, weights=None, random_state=None, by=None)


   .. py:method:: slice_min(n=None, prop=None, order_by_column=None, with_ties=True, rounding_type='round', by=None)


   .. py:method:: slice_max(n=None, prop=None, order_by_column=None, with_ties=True, rounding_type='round', by=None)


   .. py:method:: union(y)


   .. py:method:: intersection(y)


   .. py:method:: setdiff(y)


   .. py:method:: any_na()


   .. py:method:: replace_na(value)


   .. py:method:: drop_na(column_names=None)


   .. py:method:: fill_na(column_direction_dict, order_by=None, ascending=True, na_position='last', by=None)


   .. py:method:: separate(column_name, into, sep='[^[:alnum:]]+', strict=True, keep=False)


   .. py:method:: unite(column_names, into, sep='_', keep=False)


   .. py:method:: separate_rows(column_name, sep=';')


   .. py:method:: nest_by(by=None, nest_column_name='data', drop_by=True)


   .. py:method:: nest(column_names=None, nest_column_name='data', include=True)


   .. py:method:: unnest(nest_column_name='data')


   .. py:method:: split(by)


   .. py:method:: expand(spec, by=None)


   .. py:method:: complete(spec, fill=None, by=None)



